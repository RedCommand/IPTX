# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: React Native Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm install

      - name: Create assets folder
        run: mkdir -p android/app/src/main/assets

      - name: Bundle React Native code
        run: npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res

      - name: Chmod gradlew
        run: chmod +x android/gradlew

      - name: Build APK
        run: cd android && ./gradlew assembleDebug && cd ..

      - name: Rename APK
        run: mv android/app/build/outputs/apk/debug/app-debug.apk android/app/build/outputs/apk/debug/IPTX.apk

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/IPTX.apk


      - name: Generate release tag
        id: generate_release_tag
        uses: alexvingg/next-release-tag@v1.0.4
            
        with:
          github_token: ${{ secrets.TOKEN }}
          tag_prefix: ''

      - name: Upload built APK to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/debug/IPTX.apk
          token: ${{ secrets.TOKEN }}
          release_name: Release ${{ steps.generate_release_tag.outputs.release_tag }}
          body: 'Built APK for the latest commit on the default branch.'
          draft: false
          prerelease: false
          # set it to date time          
          tag_name: ${{ steps.generate_release_tag.outputs.release_tag }}